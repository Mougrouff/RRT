// Generated by gencpp from file rrt/Planification.msg
// DO NOT EDIT!


#ifndef RRT_MESSAGE_PLANIFICATION_H
#define RRT_MESSAGE_PLANIFICATION_H

#include <ros/service_traits.h>


#include <rrt/PlanificationRequest.h>
#include <rrt/PlanificationResponse.h>


namespace rrt
{

struct Planification
{

typedef PlanificationRequest Request;
typedef PlanificationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Planification
} // namespace rrt


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rrt::Planification > {
  static const char* value()
  {
    return "6d863302adc092d6268a262350f4724e";
  }

  static const char* value(const ::rrt::Planification&) { return value(); }
};

template<>
struct DataType< ::rrt::Planification > {
  static const char* value()
  {
    return "rrt/Planification";
  }

  static const char* value(const ::rrt::Planification&) { return value(); }
};


// service_traits::MD5Sum< ::rrt::PlanificationRequest> should match 
// service_traits::MD5Sum< ::rrt::Planification > 
template<>
struct MD5Sum< ::rrt::PlanificationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rrt::Planification >::value();
  }
  static const char* value(const ::rrt::PlanificationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rrt::PlanificationRequest> should match 
// service_traits::DataType< ::rrt::Planification > 
template<>
struct DataType< ::rrt::PlanificationRequest>
{
  static const char* value()
  {
    return DataType< ::rrt::Planification >::value();
  }
  static const char* value(const ::rrt::PlanificationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rrt::PlanificationResponse> should match 
// service_traits::MD5Sum< ::rrt::Planification > 
template<>
struct MD5Sum< ::rrt::PlanificationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rrt::Planification >::value();
  }
  static const char* value(const ::rrt::PlanificationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rrt::PlanificationResponse> should match 
// service_traits::DataType< ::rrt::Planification > 
template<>
struct DataType< ::rrt::PlanificationResponse>
{
  static const char* value()
  {
    return DataType< ::rrt::Planification >::value();
  }
  static const char* value(const ::rrt::PlanificationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RRT_MESSAGE_PLANIFICATION_H
